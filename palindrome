// palindrome words
let string = ("Bib Bob Detartrated Civic Deified Dewed Eve").toLowerCase()
// let string =("the function should return 'Detartrated' 
// because it is the longest palindrome contained within the string.")

function longestPalindrome(string) {
    // Initialize a variable to store the longest palindrome    
    let longest = "";

    // Loop through the string, starting at each character
  for (let i = 0; i < string.length; i++) {
    // Loop through the string, starting at the end and working backwards
    for (let j = string.length - 1; j >= 0; j--) {
      // If the characters at the current indices are the same
      if (string[i] === string[j]) {
        // Check if the substring between the indices is a palindrome
        
        if (isPalindrome(string.substring(i, j + 1))) {            
          // If the substring is a palindrome and it is longer than the current longest palindrome, 
          // update the longest variable
          if (string.substring(i, j + 1).length > longest.length) {
            longest = string.substring(i, j + 1);            
          }
        }
      }
    }
  }
  return longest
}    

function isPalindrome(string) {     
    // Return the longest palindrome     
    let conunt = 0;  
    let leng = string.length;
        
        for(let i = 0; i < leng; i++){               
            if(string[i] === string[leng - 1 - i])                 
               conunt++;                                    
        } 
        if(conunt == leng)            
           return true; 
           
        return;               
 }
 console.log(`The Longest Palindrome Is: ${longestPalindrome(string)}`)
